language: python

os:
  - linux
  # - osx

python:
  - 3.6
  - 3.7
  #- "3.6-dev"
  #- "3.7-dev"
  #- 3.8

env:
    - 'TV=0.3.0 TORCH=1.1.0'
    - 'TV=0.4.0 TORCH=1.2.0'
    - 'TV=0.4.1 TORCH=1.3.0'
    - 'TV=0.5.0 TORCH=1.4.0'
    - 'TV=0.6.0 TORCH=1.5.0'
    - 'TV=0.7.0 TORCH=1.6.0'

before_install: |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update
    # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
    brew install openssl readline
    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
    # I didn't do this above because it works and I'm lazy.
    brew outdated pyenv || brew upgrade pyenv
    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
    brew install pyenv-virtualenv
    pyenv install $PYTHON
    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
    # modify the Bash environment. ??? So, I hand-set the variables instead.
    export PYENV_VERSION=$PYTHON
    export PATH="/Users/travis/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    # A manual check that the correct version of Python is running.
    python --version
  fi
  pip install -U pip && pip install --progress-bar off torch==${TORCH} torchvision==${TV} pillow==6.2.2

install:
  - pip install -U pip && pip install --install-option="--no-cython-compile" cython
  - pip install --progress-bar off -e . && pip install pycodestyle
  # - python -c 'import torch, torchvision; print(torch.__version__, torchvision.__version__)'

script:
  - make tests
