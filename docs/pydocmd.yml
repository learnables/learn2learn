site_name: "learn2learn"

# This tells pydocmd which pages to generate from which Python modules,
# functions and classes. At the first level is the page name, below that
# is a tree of Python member names (modules, classes, etc.) that should be
# documented. Higher indentation leads to smaller header size.
generate:
  - docs/learn2learn.md:
      - learn2learn:
          - learn2learn.clone_module
          - learn2learn.detach_module
          - learn2learn.update_module
          - learn2learn.magic_box
  - docs/learn2learn.data.md:
      - learn2learn.data:
          - learn2learn.data.MetaDataset
          - learn2learn.data.UnionMetaDataset
          - learn2learn.data.FilteredMetaDataset
          - learn2learn.data.TaskDataset
          - learn2learn.data.transforms:
              - learn2learn.data.transforms.LoadData
              - learn2learn.data.transforms.NWays
              - learn2learn.data.transforms.KShots
              - learn2learn.data.transforms.FilterLabels
              - learn2learn.data.transforms.FusedNWaysKShots
              - learn2learn.data.transforms.RemapLabels
              - learn2learn.data.transforms.ConsecutiveLabels
  - docs/learn2learn.algorithms.md:
      - learn2learn.algorithms:
          - learn2learn.algorithms.MAML++
          - learn2learn.algorithms.MetaSGD++
          - learn2learn.algorithms.GBML++
          - learn2learn.algorithms.LightningMAML
          - learn2learn.algorithms.LightningANIL
          - learn2learn.algorithms.LightningPrototypicalNetworks
          - learn2learn.algorithms.LightningMetaOptNet
  - docs/learn2learn.gym.md:
      - learn2learn.gym++:
          - learn2learn.gym.MetaEnv
          - learn2learn.gym.AsyncVectorEnv
          - learn2learn.gym.envs.mujoco:
              - learn2learn.gym.envs.mujoco.HalfCheetahForwardBackwardEnv
              - learn2learn.gym.envs.mujoco.AntForwardBackwardEnv
              - learn2learn.gym.envs.mujoco.AntDirectionEnv
              - learn2learn.gym.envs.mujoco.HumanoidForwardBackwardEnv
              - learn2learn.gym.envs.mujoco.HumanoidDirectionEnv
          - learn2learn.gym.envs.particles:
              - learn2learn.gym.envs.particles.Particles2DEnv
          - learn2learn.gym.envs.metaworld:
              - learn2learn.gym.envs.metaworld.MetaWorldML1++
              - learn2learn.gym.envs.metaworld.MetaWorldML10++
              - learn2learn.gym.envs.metaworld.MetaWorldML45++
  - docs/learn2learn.optim.md:
      - learn2learn.optim++:
          - learn2learn.optim.LearnableOptimizer++
          - learn2learn.optim.ParameterUpdate++
          - learn2learn.optim.DifferentiableSGD++
          - learn2learn.optim.transforms:
            - learn2learn.optim.transforms.ModuleTransform++
            - learn2learn.optim.transforms.KroneckerTransform++
            - learn2learn.optim.transforms.MetaCurvatureTransform++
  - docs/learn2learn.nn.md:
      - learn2learn.nn++:
          - learn2learn.nn.Lambda
          - learn2learn.nn.Flatten
          - learn2learn.nn.Scale
          - learn2learn.nn.PrototypicalClassifier
          - learn2learn.nn.SVClassifier
          - learn2learn.nn.KroneckerLinear
          - learn2learn.nn.KroneckerRNN
          - learn2learn.nn.KroneckerLSTM
  - docs/learn2learn.vision.md:
      - learn2learn.vision++:
          - learn2learn.vision.models:
              - learn2learn.vision.models.OmniglotFC
              - learn2learn.vision.models.OmniglotCNN
              - learn2learn.vision.models.CNN4
              - learn2learn.vision.models.ResNet12
          - learn2learn.vision.datasets:
              - learn2learn.vision.datasets.FullOmniglot
              - learn2learn.vision.datasets.MiniImagenet
              - learn2learn.vision.datasets.TieredImagenet
              - learn2learn.vision.datasets.FC100
              - learn2learn.vision.datasets.CIFARFS
              - learn2learn.vision.datasets.VGGFlower102
              - learn2learn.vision.datasets.FGVCAircraft
              - learn2learn.vision.datasets.DescribableTextures
              - learn2learn.vision.datasets.CUBirds200
              - learn2learn.vision.datasets.Quickdraw
          - learn2learn.vision.transforms:
              - learn2learn.vision.transforms.RandomClassRotation
          - learn2learn.vision.benchmarks:
              - learn2learn.vision.benchmarks.list_tasksets
              - learn2learn.vision.benchmarks.get_tasksets
  - docs/learn2learn.text.md:
      - learn2learn.text.datasets.NewsClassification

# MkDocs pages configuration. The `<<` operator is sugar added by pydocmd
# that allows you to use an external Markdown file (eg. your project's README)
# in the documentation. The path must be relative to current working directory.
# This configuration is not mandatory if you have your own mkdocs.yml config file.
pages:
  - Home: index.md << ../README.md
  - Tutorials:
      - Getting Started: tutorials/getting_started.md
      - Feature Reuse with ANIL: tutorials/anil_tutorial/ANIL_tutorial.md
  - Documentation:
      - learn2learn: docs/learn2learn.md
      - learn2learn.data: docs/learn2learn.data.md
      - learn2learn.algorithms: docs/learn2learn.algorithms.md
      - learn2learn.optim: docs/learn2learn.optim.md
      - learn2learn.nn: docs/learn2learn.nn.md
      - learn2learn.vision: docs/learn2learn.vision.md
      - learn2learn.gym: docs/learn2learn.gym.md
  - Examples:
      - Computer Vision: examples.vision.md << ../examples/vision/README.md
      - Reinforcement Learning: examples.rl.md << ../examples/rl/README.md
      - Optimization: examples.optim.md << ../examples/optimization/README.md
  - Changelog: changelog.md << ../CHANGELOG.md
  #- Paper List: paper_list.md
  - GitHub: https://github.com/learnables/learn2learn/


# These options all show off their default values. You don't have to add
# them to your configuration if you're fine with the default.
docs_dir: source
gens_dir: _build/pydocmd     # This will end up as the MkDocs 'docs_dir'
site_dir: _build/site
site_url: http://learn2learn.net
site_author: SÃ©b Arnold
google_analytics: ['UA-68693545-3', 'seba-1511.github.com']
repo_name: 'learnables/learn2learn'
repo_url: 'https://github.com/learnables/learn2learn'

theme:
    name: 'material'
    logo: 'assets/img/learn2learn_white.png'
    favicon: 'assets/img/favicons/favicon.ico'
    palette:
        primary: 'blue'
        accent: 'orange'
    font:
        text: 'Source Sans Pro'
        code: 'Ubuntu Mono'

extra:
  social:
    - type: 'github'
      link: 'https://github.com/learnables'
    - type: 'twitter'
      link: 'https://twitter.com/seba1511'
    - type: 'bug'
      link: 'http://seba1511.net'

loader: pydocmd.loader.PythonLoader
preprocessor: pydocmd.preprocessor.Preprocessor
# Whether to output headers as markdown or HTML.  Used to workaround
# https://github.com/NiklasRosenstein/pydoc-markdown/issues/11.  The default is
# to generate HTML with unique and meaningful id tags, which can't be done with
# markdown.
#
# Note: if using the simple generator mode, this will default to 'markdown'
# instead of 'html'.
headers: markdown

# Additional search path for your Python module. If you use Pydocmd from a
# subdirectory of your project (eg. docs/), you may want to add the parent
# directory here.
additional_search_paths:
    - ..

extra_javascript:
    - https://cdn.jsdelivr.net/npm/katex/dist/katex.min.js
    - https://cdn.jsdelivr.net/npm/katex/dist/contrib/mathtex-script-type.min.js

extra_css:
    - https://cdn.jsdelivr.net/npm/katex/dist/katex.min.css
    - 'assets/css/l2l_material.css'

# Extensions
markdown_extensions:
    - mdx_math
    - admonition
    - codehilite:
        guess_lang: true
        linenums: true
    - toc:
        permalink: true
